#include<stdio.h>
#include<stdlib.h>
#include<mpi.h>
int main(int argv,char** argc)
{
	int rank,size;
	int number;
	MPI_Init(&argv,&argc);
	MPI_Comm_rank(MPI_COMM_WORLD,&rank);
	MPI_Comm_size(MPI_COMM_WORLD,&size);
	if(size<2)
	{
		if(rank==0)
		{
			printf("\n This program requires atleast two process to run\n");
			
		}
		MPI_Finalize();
		return 0;
	}
	number=100;
	if(rank==0)
	{
		printf("\n process 0 is sending %d to process 1",number);
		MPI_Send(&number,1,MPI_INT,1,0,MPI_COMM_WORLD);
	}
	else if(rank==1)
	{
		MPI_Recv(&number,1,MPI_INT,0,0,MPI_COMM_WORLD,MPI_STATUS_IGNORE);
		printf("\n process 1 recieved %d from process 0",number);
	}
	MPI_Finalize();
	return 0;
}
		
